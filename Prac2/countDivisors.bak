#lang sicp
(define countDivisors
  (lambda (val lst)
    (let loop ((counter 0) (lst lst))
      (cond
        ((null? lst) counter)
        ((= (remainder val (car lst)) 0)
         (loop (+ counter 1) (cdr lst)))
        (else
         (loop counter (cdr lst)))))))

(countDivisors 10 '(1 2 3 4 5 6 7 8 9 10))
